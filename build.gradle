plugins {
    id 'org.springframework.boot' version '3.3.4' // Update to the latest stable version
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
java {
    sourceCompatibility = JavaVersion.VERSION_22
    targetCompatibility = JavaVersion.VERSION_22
}

repositories {
    mavenCentral() // Ensure Maven Central is included
    maven { url 'https://repo.spring.io/release' } // Add Spring release repository
    maven { url 'https://repo.spring.io/milestone' } // Add Spring milestone repository
    maven { url 'https://repo.spring.io/snapshot' } // Add Spring snapshot repository
    maven { url 'https://repo.reactor.io/core' } // Add Reactor snapshot repository
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Reactive programming dependencies
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.projectreactor:reactor-core'

    // Aspect-oriented programming dependencies
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    // Reactor
    implementation platform('io.projectreactor:reactor-bom:2023.0.0')
    implementation 'io.projectreactor:reactor-core'

    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.2.11'

    // AspectJ
    implementation 'org.aspectj:aspectjweaver:1.9.9.1'
    implementation 'org.aspectj:aspectjrt:1.9.9.1'

    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Guava for additional utilities
    implementation 'com.google.guava:guava:30.1.1-jre'

    // AutoValue
    compileOnly 'com.google.auto.value:auto-value-annotations:1.9'
    annotationProcessor 'com.google.auto.value:auto-value:1.9'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Spring Framework
    implementation 'org.springframework:spring-context:5.3.23' // Use the latest stable version

    // SLF4J and Logback
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    // Common logging implementation for SLF4J

    // Reactor
    implementation 'io.projectreactor:reactor-core:3.5.1'
    implementation 'io.projectreactor:reactor-test:3.5.1'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["-parameters"]
}

springBoot {
    mainClass = 'reactive.MainClass'
}

test {
    useJUnitPlatform()
}

// Update this to address the FileTreeElement.getMode() deprecation
tasks.withType(org.springframework.boot.gradle.tasks.bundling.BootJar) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    filePermissions {
        user {
            read = true
            write = true
            execute = false
        }
        group {
            read = true
            execute = false
        }
        other {
            read = true
            execute = false
        }
    }
    dirPermissions {
        user {
            read = true
            write = true
            execute = true
        }
        group {
            read = true
            execute = true
        }
        other {
            read = true
            execute = true
        }
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.projectlombok' && details.requested.name == 'lombok') {
            details.useVersion '1.18.30' // Use the latest stable version of Lombok
        }
    }
}