plugins {
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.freefair.lombok' version '6.5.1'  // Add Lombok plugin
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral() // Ensure Maven Central is included
    maven { url 'https://repo.spring.io/release' } // Add Spring release repository
    maven { url 'https://repo.spring.io/milestone' } // Add Spring milestone repository
    maven { url 'https://repo.spring.io/snapshot' } // Add Spring snapshot repository
    maven { url 'https://repo.reactor.io/core' } // Add Reactor snapshot repository
}

configurations {
    // Define developmentOnly without extending from runtimeClasspath
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // Reactor
    implementation platform('io.projectreactor:reactor-bom:2024.0.0-M6')
    implementation 'io.projectreactor:reactor-core:3.5.10'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'ch.qos.logback:logback-classic:1.2.6'
    
    // AspectJ
    implementation 'org.aspectj:aspectjweaver:1.9.9.1'
    implementation 'org.aspectj:aspectjrt:1.9.9.1'
    
    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Guava for additional utilities
    implementation 'com.google.guava:guava:30.1.1-jre'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    
    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

bootJar {
    mainClassName = 'reactive.MainClass' // Specify your main class here
}

test {
    useJUnitPlatform()
}

// Enable annotation processing for Lombok
tasks.withType(JavaCompile) {
    options.compilerArgs += ["-parameters"]
    options.annotationProcessorPath = configurations.annotationProcessor
}